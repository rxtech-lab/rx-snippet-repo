title: Repository schema
description: |
  This schema describes the structure of config file for a repository.

properties:
  globalConfig:
    type: object
    title: Global configuration
    description: |
      Global configuration for the repository. Can be overridden by the step configuration.
    allOf:
      - $ref: "#/definitions/configuration"
          
  permissions:
    type: array
    title: Permissions
    description: |
      List of permissions for the repository. You need to specify the permissions for each step.
    items:
      $ref: "#/definitions/permission"
  lifecycle:
    type: array
    description: |
      List of lifecycle events at the global level.
      - The global setup will be executed first, followed by the step setup.
      - The step teardown will be executed first, followed by the global teardown.
    maxItems: 2
    uniqueItems: true
    items:
      type: object
      allOf:
        - properties:
            on:
              type: string
              oneOf:
                - const: setup
                  title: Run before all steps
                - const: teardown
                  title: Run after all steps
        - $ref: "#/definitions/script"
  steps:
    type: array
    description: |
      List of steps to be executed in the repository. The order of the steps matters.
    items:
      allOf:
        - $ref: "#/definitions/step"
        - $ref: "#/definitions/script"
        - properties:
            lifecycle:
              type: array
              maxItems: 2
              uniqueItems: true
              description: |
                List of lifecycle events for the step.
              items:
                type: object
                allOf:
                  - properties:
                      on:
                        type: string
                        oneOf:
                          - const: beforeStep
                            title: Before Step
                          - const: afterStep
                            title: After Step
                        description: |
                          Event on which the step should be executed.
                  - $ref: "#/definitions/script"
definitions:
  configuration:
    type: object
    properties:
      templatePath:
        type: string
  step:
    type: object
    properties:
      id:
        type: string
        description: |
          Unique identifier for the step. This is used to identify the step in the logs.
      name:
        type: string
        description: |
          Name of the step. This is used to identify the step in the logs.
      form:
        type: object
        title: Form
        description: |
            JSON Schema for the form. 
            Can be used to get value from the user by using {{ from.value.fieldName }} 
            or {{ step.from.value.fieldName }} to access the value from other steps.
              
      if:
        type: string
        description: |
          Condition to execute the step. If the condition is true, the step will be executed. If the condition is false, the step will be skipped.
        examples:
          - "true"
          - "false"
          - always()
          - never()
          - "{{ step.id == 'step1' }}"
          - "{{ step.id == 'step1' && step.id == 'step2' }}"
          - "{{ step.id == 'step1' || step.id == 'step2' }}"
  script:
    type: object
    properties:
      type:
        description: Script type
        type: string
        default: bash
        oneOf:
          - const: bash
            title: Bash script
            description: Bash script
          - const: javascript
            title: JavaScript script
            description: JavaScript script
          - const: template
            title: Template files
            description: Generate files from templates
    allOf:
      - if:
          properties:
            type:
              const: bash
        then:
          properties:
            command:
              type: string
              description: |
                Bash command
          required:
            - command
      - if:
          properties:
            type:
              const: javascript
        then:
          properties:
            file:
              type: string
              description: |
                  Path to the JavaScript file
          required:
            - file
      - if:
          properties:
            type:
              const: template
        then:
          properties:
            files:
              type: array
              description: |
                List of files to be generated.
              items:
                type: object
                required:
                  - file
                  - output
                properties:
                  templateFolder:
                    type: string
                    description: Path to the template folder. Will use the global template path if not specified.
                    example:
                      - "templates"
                  file:
                    type: string
                    description: |
                      Path to the file. 
                      Will use the global template path if not specified.
                      Path will be relative to the template folder.
                    example:
                      - "README.md"
                      - "LICENSE"
                      - "/someFolder/README.md"
                  output:
                    type: string
                    description: Output file path. Can use variables.
                    example:
                      - "README.md"
                      - "LICENSE"
                      - "{{ step.id }}.md"

  permission:
    type: string
    description: |
      Permission for the step.
    oneOf:
      - const: readFile
        title: Read File
        description: |
          Read a file from the repository.
      - const: writeFile
        title: Write File
        description: |
          Write a file to the repository.
      - const: runCommand
        title: Run Command
        description: |
          Run a command in the repository.
      - const: runScript
        title: Run Script
        description: |
          Run a script in the repository.
      - const: deleteFile
        title: Delete File
        description: |
          Delete a file from the repository.
      - const: readDirectory
        title: Read Directory
        description: |
          Read a directory from the repository.
      - const: writeDirectory
        title: Write Directory
        description: |
          Write a directory to the repository.
      - const: deleteDirectory
        title: Delete Directory
        description: |
          Delete a directory from the repository.
      - const: readEnvironmentVariable
        title: Read Environment Variable
        description: |
          Read an environment variable
      - const: writeEnvironmentVariable
        title: Write Environment Variable
        description: |
          Write an environment variable
      - const: readSecret
        title: Read Secret
        description: |
          Read a secret from the repository.
      - const: writeSecret
        title: Write Secret
        description: |
          Write a secret to the repository.
      - const: readVariable
        title: Read Variable
        description: |
          Read a variable from the step
      - const: writeVariable
        title: Write Variable
        description: |
          Write a variable to the step.
